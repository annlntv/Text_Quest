from hero import Hero, Witch, Goblin, Elf, Troll, Vamp, Monster
from time import sleep
from random import randint

taro = {
    "шут": "Карта Шут рекомендует человеку быть искренним, добрым, открытым и спонтанным. Для того чтобы начать новую жизнь, нужно стать свободным, и в первую очередь это должна быть свобода от самого себя.",
    "маг": "Карта Маг говорит о том, что человеку необходимо проявить свою инициативу, ведь он значительно хорошо вооружен, и сможет показать свою логику и благоразумие. Даже если в этот день ему обязательно нужно будет срочно принимать решение, то ничего не помешает ему это сделать.",
    "жрица": "Карта Жрица говорит о том, что не нужно торопиться. Важно быть собой и следить за ситуацией.",
    "императрица": "Карта Императрица призывает человека просто успокоиться и дать возможность событиям развиваться так, как они развиваются.",
    "император": "Карта Император говорит о том, что к цели следует идти, не пугаясь возможных препятствий, действуя последовательно и настойчиво.",
    "жрец": "Карта Жнец: Нельзя быть уверенным на все 100% в своей правоте, ведь вопрос можно решить и другими способами.",
    "влюбленные": "Карта Влюбленные говорит, что необходимо сделать выбор, который станет жизненным испытанием.",
    "колесница": "Карта Колесница призывает человека к решительным и активным действиям. Любые задачи и цели будут разрешимы, если человек сможет сконцентрироваться на них как следует. Но прежде чем, что-то делать, необходимо все обдумать и предусмотреть.",
    "сила": "Карта Сила символизирует увлеченность и успех начинаний. Она рекомендует приложить свои таланты к работе или активизироваться в личном плане. ",
    "отшельник": "Карта Отшельник говорит о том, что достижение цели требует выверенных планов и тщательного обдумывания своих действий.",
    "фортуна": "Карта Фортуна: Если человек сумеет осознать свое предназначение в жизни, то все у него будет складываться прекрасно.",
    "справедливость": "Аркан Справедливость говорит о том, что необходимо очень хорошо и трезво размышлять над текущими делами. Если разрешается какой-либо конфликт, принимаются какие-либо решения, внимательно и дотошно просчитайте все последствия ваших действий.",
    "повешенный": "Карта Повешенный говорит о том, что нужно набраться терпения и просто пережить этот день. Попытки как-то повлиять на события и ускорить их ход приведут только к противоположному результату.",
    "смерть": "Карта Смерть призывает подготовить себя к переменам, которые произойдут в вашей жизни. С их появлением у человека полностью меняются взгляды на жизнь, он и сам в принципе становится совершенно другим человеком.",
    "умеренность": "Карта Умеренность: необходимо любое начатое дело доводить до конца, чтобы в последствие не возникло больших трудностей.",
    "дьявол": "Карта Дьявол: Необходимо бороться со злом и несправедливостью.",
    "башня": "Карта Башня предупреждает, хотите вы этого или нет, но ваша жизнь значительно изменится, и лучше всего смириться с наступившими изменениями.",
    "звезда": "Вам нужно ценить представившиеся вам возможности, верить в себя, вот что советует карта Звезда.",
    "луна": "Научитесь преодолевать в себе страхи. Если человек сможет избавиться от своих страхов, то он сможет сделать значительный скачок вперед. Карта Луна поможет все преодолеть, исправить и усовершенствовать. ",
    "солнце": "Карта Солнце: нужно верить в себя и свой успех. Только таким образом можно многого добиться в жизни. ",
    "суд": "Карта Суд: перемены в жизни неизбежны, и бояться их не следует. Нужно лишь быть уверенным в правильности собственного выбора. ",
    "мир": "Карта Мир: Берите от жизни все, получите то, о чем давно мечтали."
}

def print_game_over():
    print()
    print("   _____          __  __ ______    ______      ________ _____  ")
    print("  / ____|   /\   |  \/  |  ____|  / __ \ \    / /  ____|  __ \ ")
    print(" | |  __   /  \  | \  / | |__    | |  | \ \  / /| |__  | |__) |")
    print(" | | |_ | / /\ \ | |\/| |  __|   | |  | |\ \/ / |  __| |  _  / ")
    print(" | |__| |/ ____ \| |  | | |____  | |__| | \  /  | |____| | \ \ ")
    print("  \_____/_/    \_\_|  |_|______|  \____/   \/   |______|_|  \_\\")
    print()

def print_choice():
    print()
    print("   _________________________________________________________")
    print(" /|     -_-                                             _-  |\ ")
    print("/ |_-_- _                                         -_- _-   -| \   ")
    print("  |                            _-  _--                      | ")
    print("  |                            ,                            |")
    print("  |      .-'````````'.        '(`        .-'```````'-.      |")
    print("  |    .` |           `.      `)'      .` |           `.    |          ")
    print("  |   /   |   ()        \      U      /   |    ()       \   |")
    print("  |  |    |    ;         | o   T   o |    |    ;         |  |")
    print("  |  |    |     ;        |  .  |  .  |    |    ;         |  |")
    print("  |  |    |     ;        |   . | .   |    |    ;         |  |")
    print("  |  |    |     ;        |    .|.    |    |    ;         |  |")
    print("  |  |    |____;_________|     |     |    |____;_________|  |  ")
    print("  |  |   /  __ ;   -     |     !     |   /     `'() _ -  |  |")
    print("  |  |  / __  ()        -|        -  |  /  __--      -   |  |")
    print("  |  | /        __-- _   |   _- _ -  | /        __--_    |  |")
    print("  |__|/__________________|___________|/__________________|__|")
    print(" /                                             _ -        lc \ ")
    print("/   -_- _ -             _- _---                       -_-  -_ \ ")

def print_forest():
    print('     /\     /\     /\     /\     ')
    print('    /  \   /  \   /  \   /  \    ')
    print('    /  \   /  \   /  \   /  \    ')
    print('    ----   ----   ----   ----    ')
    print('     ||     ||     ||     ||     ')
    print('     ||     ||     ||     ||     ')

def print_chest():
    print()
    print("                      _.--. ")
    print("                  _.-'_:-'|| ")
    print("              _.-'_.-::::'|| ")
    print("         _.-:'_.-::::::'  || ")
    print("       .'`-.-:::::::'     || ")
    print("      /.'`;|:::::::'      ||_ ")
    print("     ||   ||::::::'     _.;._'-._ ")
    print("     ||   ||:::::'  _.-!oo @.!-._'-. ")
    print("     ('.  ||:::::.-!()oo @!()@.-'_.| ")
    print("      '.'-;|:.-'.&$@.& ()$%-'o.'-U|| ")
    print("        `>'-.!@%()@'@_%-'_.-o _.|'|| ")
    print("         ||-._'-.@.-'_.-' _.-o  |'|| ")
    print("         ||=[ '-._.-+U/.-'    o |'|| ")
    print("         || '-.]=|| |'|      o  |'|| ")
    print("         ||      || |'|        _| '; ")
    print("         ||      || |'|    _.-'_.-' ")
    print("         |'-._   || |'|_.-'_.-' ")
    print("          '-._'-.|| |' `_.-' ")
    print("              '-.||_/.-' ")
    print()

def print_velikan():
    print()
    print("                                                  ___I___ ")
    print("                                                 /=  |  #\ ")
    print("                                                /.__-| __ \ ")
    print("                                                |/ _\_/_ \| ")
    print("                                                (( __ \__)) ")
    print("                                             __ ((()))))()) __ ")
    print("                                           ,'  |()))))(((()|# `. ")
    print("                                          /    |^))()))))(^|   =\ ")
    print("                                         /    /^v^(())()()v^;'  .\ ")
    print("                                         |__.'^v^v^))))))^v^v`.__| ")
    print("                                        /_ ' \______(()_____(   | ")
    print("                                   _..-'   _//_____[xxx]_____\.-| ")
    print("                                  /,_#\.=-' /v^v^v^v^v^v^v^v^| _| ")
    print("                                  \)|)      v^v^v^v^v^v^v^v^v| _| ")
    print("                                   ||       :v^v^v^v^v^v`.-' |#  \, ")
    print("                                   ||       v^v^v^v`_/\__,--.|\_=_/ ")
    print("                                   ><       :v^v____|  \_____|_ ")
    print("                                ,  ||       v^      /  \       / ")
    print("                               //\_||_)\    `/_..-._\   )_...__\ ")
    print("                              ||   \/  #|     |_='_(     |  =_(_ ")
    print("                              ||  _/\_  |    /     =\    /  '  =\ ")
    print("                               \\\/ \/ )/ gnv |=____#|    '=....#| ")
    print()

def print_monster():
    print()
    print("                           |                     | ")
    print("                        \     /               \     / ")
    print("                       -= .'> =-             -= <'. =- ")
    print("                          '.'.                 .'.' ")
    print("                            '.'.             .'.' ")
    print("                              '.'.----^----.'.' ")
    print("                               /'==========='\ ")
    print("                           .  /  .-.     .-.  \  . ")
    print("                           :'.\ '.O.') ('.O.' /.':   ")
    print("                           '. |               | .'   ")
    print("                             '|      / \      |' ")
    print("                              \     (o'o)     / ")
    print("                              |\             /| ")
    print("                              \('._________.')/ ")
    print("                               '. \/|_|_|\/ .'                ")
    print("                                /'._______.'\  ")

def you_died(why):
    print_game_over()
    print("{}. Интересный исход!".format(why))
    exit(0)

def get_name():
    name = input('Как вас зовут? > ')
    answer = input('Ваше имя {}, я правильно понимаю? [да | нет]'.format(name)).lower()
    if answer in ['д', 'да', 'ес']:
        print('Приятно познакомиться, {}! Давайте начнем наши приключения.'.format(name))
    elif answer in ['н', 'нет', "неа", "не"]:
        print("Хорошо, тогда вас будут звать Булочка.")
        name = 'Булочка'
    else:
        print('Пытаетесь быть смешным? Вашем именем в таком случае будет Придира.')
        name = 'Придира'
    return name

def get_hero(name):

    print('Выберите, пожалуйста, свою видовую принадлежность:')
    print('1 - Ведьма')
    print('2 - Гоблин')
    print('3 - Эльф')
    print('4 - Тролль')
    print('5 - Вурдалак')
    answer = input()
    if answer == '1':
        person = Witch(name, 50, 50, 'ведьма')
    elif answer == '2':
        person = Goblin(name, 80, 20, 'гоблин')
    elif answer == '3':
        person = Elf(name, 70, 25, 'эльф')
    elif answer == '4':
        person = Troll(name, 90, 10, 'тролль')
    elif answer == '5':
        person = Vamp(name, 70, 20, 'вурдалак')
    else:
        print('Хорошо, тогда вашем видом будет Гоблин.')
        person = Goblin(name, 80, 20, "гоблин")
    person.hello()
    return person

def get_taro():
    print("Эта функция пока что недоступна.")

def fairy_village(name, person):
    print('На следующее утро вы решили спросить у фей, где находится Мертвое озеро. Одна фея вам подсказывает - нужно двигаться в направлении Северо-запада. Там вы наткнетесь на деревню Киш - в ней обитают заключенные существа, которые нарушили закон.')
    answer = input('Направиться туда? [да|нет]').lower()
    if answer in ['да', "д", "ес", "lf"]:
        print('')
    else:
        print('Вы не поверили словам феи и решили двигаться куда глядят глаза. По пути вас встречает бродячий тролль, настроенный очень агрессивно.')
        print('Он рычит и нападает на вас.')
        bad_troll = Troll('Бродячий тролль', 50, 10, "тролль")
        bad_troll.hello()
        person.fight(bad_troll)





def werewolf_forest(name, person):
    print("Перевертыши настроены очень агрессивно.")

def continue_adventure(name, person):
    sleep(2)
    print("Вы продолжаете ваши приключения.")
    print('Напоминание!')
    print('Ваше задание: ВСТРЕТИТЬСЯ С ВОДЯНЫМ')
    sleep(2)
    answer = input('Посмотреть информацию о себе? [да | нет]').lower()
    if answer in ['да', 'д', 'ес']:
        person.hello()
    else:
        pass
    sleep(2)
    print('Хорошо, идем дальше.')
    sleep(1)
    print('Вы сильно устали из-за того, что провели несколько дней в лесу, продолжая искать Мертвое озеро.')
    if person.kind == 'ведьма':
        sleep(1)
        print('У вас начинает кружиться голова. Так как вы являетесь представителем класса Ведьма, у вас появляется видение.')
        sleep(1)
        print('Перед вами возникает темная гладь воды, в которой отражается луна. Вы переводите взгляд чуть влево - и видите перед собой табличку "НЕ КУПАТЬСЯ! Опасно для жизни. с ув., совет старейшин деревни Киш.')
        sleep(1)
        print('Запомните данную информацию: она может вам пригодиться.')
    print('Стволы деревьев становятся всё больше и больше. В округе могут бродить Великаны, которых лучше обходить стороной.')
    sleep(1)
    print('Спустя некоторое время вы натыкаетесь на небольшое поселение фей. Всё вокруг красиво освещается их самодельными фонарями - вам очень хочется отдохнуть.')
    sleep(1)
    print('Мимо вас как раз-таки пролетала фея - и вы её спрашиваете, где здесь можно отдохнуть. Она отводит вас к небольшому домику; только за одну ночь нужно заплатить.')
    sleep(1)
    print('Стоимость аренды домика на одну ночь: 3 золотых монеты.\nВаш бюджет: 2 золотых монеты.\n')
    print('Ваши доступные варианты:\n1. Честно признаться, что не хватает денег\n2. Солгать\n3. Спросить про другие варианты')
    flag = 0
    if person.kind == 'вурдалак':
        flag = 1
    buy = input('Что вы будете делать? > ').lower()
    if buy == '1' and flag == 0:
        print('Фея на вас не злится и не выгоняет. Она позволяет вам остаться за 2 золотых монеты.')
        fairy_village(name, person)
    elif buy == '2' and flag == 0:
        print('Фея сразу разоблачает вас. Феи - очень гордый народ и не терпит лжи. {}, вас с позором выгнали из деревни, и вы остались ночевать на грязной мокрой земле.'.format(name))
        if person.kind == 'тролль':
            print('Будучи Троллем, вам очень трудно сдерживать свою агрессию, но каким-то образом вы успешно справляетесь...')
        werewolf_forest(name, person)
    elif buy == '3' or flag == 0:
        print('Фея предлагает вам остановиться в другом домике - но там очень не удобно. У вас не остается другого выбора, кроме как согласиться.')
        fairy_village(name, person)
    elif flag == 1:
        print('Так как вы являетесь представителем вида Вурдалак, у вас есть дар гипноза. Вы успешно внушаете ей, что отдали ей деньги. На самом деле же, вы не потратили ни копейки.')
        fairy_village(name, person)
    else:
        print('Вы так и не смогли определиться. Вам пришлось ночевать среди воющих перевертышей.')
        werewolf_forest(name, person)


def start_adventure(name, person):
    treasure = ['бриллианты', 'золото', 'расшитая изумрудами мантия', 'корона']
    sleep(1)
    print('Вы идете к Дремучему лесу, как вам и сказали.')
    sleep(2)
    print_forest()
    print('Перед вами предстают две тропинки: Темная и Светлая.')
    sleep(1)
    print('Темная кажется немного пугающей - деревья там стоят плотно друг к другу и едва ли можно что-то рассмотреть.')
    print('Светлая же наоборот - она широкая, и, кажется, ведет на какую-то поляну.')
    answer = input('Какой путь вы выберете? [темный | светлый] > ').lower()
    sleep(1)
    if answer in ['темный', "темная"]:

        print('Вы выбрали темную тропу.\nКогда вы на неё заходите, вам очень страшно, но пока что ничего не предвещает беды.\nВы слышите уханье совы и шорох в кустах - они вас очень пугают, но всё идете дальше, ведь вы - герой.')
        question = input('По пути вы видите что-то сверкающее в стороне под елью. Подойти? [да | нет]')
        if question in ['д', "да"] or person.kind == 'эльф' or person.kind == 'гоблин':
            if person.kind == 'гоблин':
                print('Так как вы являетесь представителем вида Гоблин, вы не смогли устоять перед финансовой наживой.')
            if person.kind == "эльф":
                print('Так как вы являетесь представителем вида Эльф, вы не смогли устоять перед финансовой наживой. Сундук будто бы манит вас к себе.')
            sleep(1)
            print('Ого! Вы не можете поверить своим глазам. Это же сокровище!')
            sleep(1)
            print_chest()
            print('{}, вы нашли'.format(name))
            for i in treasure:
                print(i)
            print('Взять или оставить на месте?')
            choice = input('Забрать - 1 ; Оставить - 2 >')
            if choice == '1':
                sleep(1)
                print('БУМ!')
                print('Вокруг вас всё загорается огнем: перед вами появляется злой демон Ктулху!!!')
                print_monster()
                choice2 = input('Вы ощущаете, как постепенно слабеете. Вступить в бой или убежать? > ').lower()
                if choice2 in ["вступить", "бой", "драка", "драться", 'вступить в бой'] or person.kind == 'тролль':
                    if person.kind == 'тролль':
                        print('Так как вы являетесь представителем вида Тролль, вы не смогли противостоять желанию сразиться.')
                    name_monster = "Демон"
                    monster = Monster(name_monster, 100, 0, 'демон')
                    result = monster.fight(person)
                    if result == 'победа':
                        you_died('Монстр жестоко вас убивает.')
                    else:
                        print('Тело монстра перед вами постепенно испаряется.')
                        continue_adventure(name, person)
                elif choice2 in ['бежать', "убежать"]:
                    you_died('Вы погибли. Вас съел монстр. Было вкусно.')
            elif choice == '2':
                print('Благодаря своему решению вы смогли спасти себя от демона, который охраняет этот сундук. {}, вы сделали верный выбор!'.format(name))
                continue_adventure(name, person)
            else:
                print('Не знаю, что вы имели ввиду.')
                sleep(2)
                start_adventure(name, person)
    elif answer in ['светлая', "светлый", "свет"]:
        print('Вы выбрали светлую тропу.\nОна не вызывает у вас ни малейшего чувства страха. Спустя некоторое время вы выходите на поляну, усеянную вдоль и поперек цветами.\nОднако, вы видите, как множество птиц пролетают мимо вас, издавая звуки.')
        print('Сперва вы не придаете этому значения, но затем позади вас слышится сильный грохот огромных ног.')
        print_velikan()
        print('ЭТО ВЕЛИКАН!!! (Великаны - очень грязные, агрессивные и опасные существа. 9 из 10 стычек с ним приводят к смерти.)')
        print('Он начинает на вас идти. Что вы сделаете?')
        choice3 = input('Бежать - 1 ; Сразиться - 2 > ').lower()
        if choice3 == '1' and person.kind != 'тролль':
            you_died('Шансов на побег у вас нет. Как только вы побежали, Великан в два шага преодолел расстояние и превратил вас в лепешку.')
        elif choice3 == '2' or person.kind == 'тролль':
            if person.kind == 'тролль':
                print('Так как вы являетесь представителем вида Тролль, вас охватило чувством азарта и вы не смогли противостоять желанию сразиться с монстром.')
            print('Вы идете на отчаянный шаг и решаете сразиться с ним. Шансов на победу практически нет, но вы все равно пытаетесь испытать удачу.')
            velikan = Monster('Великан', 100, 15, 'великан')
            result1 = velikan.fight(person)
            if result1 == 'поражение':
                print('Случилось невероятное. Вы чудом поражаете Великана своим оружием и избегаете смерти.')
                continue_adventure()
            else:
                you_died('Великан вас убил, и вы так и не смогли завершить начатое.')
        else:
            you_died('Вы не смогли определиться, поэтому Великан вас спокойно растоптал.')
    else:
        print('Не знаю, что вы имели ввиду.')
        sleep(2)
        start_adventure(name, person)


def magician():
    print("Вы заходите в лавку гадалки. Приглушенный свет, аромат благовоний, множество декоратинвых подушек и свеч... Посреди комнаты сидит пожилая женщина, руки её увешаны кольцами и золотыми браслетами. Она смотрит в свой шар, но, как только вы появляетесь, отрывается.")
    sleep(1)
    print('- Я тебя ждала, Странник. Звезды сказали, что ты появишься с минуты на минуту. - говорит она.')
    print('Вы удвиленно на неё смотрите и присаживаетесь.')
    sleep(1)
    answer = input('Гадалка спрашивает: - Хочешь ли ты узнать свою судьбу? [да | нет]').lower()
    if answer in ["д", 'да']:
        name = get_name()
        print('Гадалка слышит ваше имя и немного хмурится. - Я что-то не могу увидеть, какого же ты вида...')
        person = get_hero(name)
        print('- Понятно... - говорит она.')
        question = input('Хочешь ли ты расклад на Таро? [да | нет] >')
        if question in ["д", 'да']:
            get_taro()
        print('Ага... хорошо... Звёзды говорят тебе двигаться в сторону Дремучего леса. Там, около Мертвого озера, ты найдешь существо, о котором слагают легенды, и за голову которого полагается щедрая награда... Имя его - Водяной...')
        print('Удачи тебе, {}'.format(name))
        start_adventure(name, person)
    else:
        you_died('Гадалка злится и выгоняет вас. Ваши приключения на этом закончены.')


def taverna():
    print('Вы заходите в небольшую таверну, в которой стоит отвратительный запах прокисшего кофе. В ней почти никого нет, вы проходите к стойке заказа.')
    print('Вас собирается обслуживать орк. Вы делаете свой заказ и невольно между вами завязывается диалог, благодаря которому он делает вам интересное предложение:')
    print('- Слушай... Мне нужно, чтобы ты передал кое-что моему другу, но, для начала, представься, пожалуйста.')
    name = get_name()
    print('- Классное имя! - говорит орк. - Я что-то не могу различить, а какого ты вида?')
    person = get_hero(name)
    print('- Понятно. Теперь вернемся к моему вопросу: сможешь ли ты передать Водяному из Дремучего леса мою записку? Он живет в Мертвом озере посреди леса. Только ни в коем случае её не открывай, это конфиденциально')
    print('Да, знаю, местечко не самое приятное и немного пугающее, но всё-таки...?')
    answer = input("Каков ваш ответ? [да | нет] > ").lower()
    if answer in ["д", 'да']:
        start_adventure(name, person)
    else:
        you_died('Пытаетесь быть остроумным? Тогда нам с вами не по пути.')


print('Вы находитесь в средневековом городе Вилмар. Мимо вас проходят разные существа - оборотни, гномы, демоны, феи...\nСлева от вас вы видите яркую лавку неизвестной гадалки, а справа - таверну местного орка.')
sleep(2)
print_choice()
choice = input('Куда вы зайдете? [левая дверь | правая дверь] >')
choice = choice.lower()
if 'лев' in choice:
    magician()
elif 'прав' in choice:
    taverna()
else:
    print('(вы точно это имели ввиду?)')
    sleep(1)
    you_died('Вы не придали значения дверям и прошли мимо, упустив возможность испытать невероятные эмоции.')
